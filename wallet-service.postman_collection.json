{
	"info": {
		"_postman_id": "b0e7b3a8-5b2d-4b2e-8b1a-9b9b9b9b9b9b",
		"name": "Wallet Service",
		"description": "API collection for Wallet Service with Authentication and Idempotency support",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser\",\n    \"password\": \"password123\",\n    \"email\": \"test@example.com\"\n}"
						},
						"url": {
							"raw": "http://localhost:3000/auth/register",
							"protocol": "http",
							"host": ["localhost"],
							"port": "3000",
							"path": ["register"]
						},
						"description": "Register a new user"
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "http://localhost:3000/auth/login",
							"protocol": "http",
							"host": ["localhost"],
							"port": "3000",
							"path": ["login"]
						},
						"description": "Login to get JWT token"
					},
					"response": [],
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"if (jsonData && jsonData.token) {",
									"    pm.environment.set('jwt_token', jsonData.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				}
			],
			"description": "Authentication endpoints"
		},
		{
			"name": "Setup Wallet",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwt_token}}",
						"description": "JWT token for authentication"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Test Wallet\",\n    \"balance\": 1000.0000\n}"
				},
				"url": {
					"raw": "http://localhost:3000/setup",
					"protocol": "http",
					"host": ["localhost"],
					"port": "3000",
					"path": ["setup"]
				},
				"description": "Create a new wallet with initial balance (supports up to 4 decimal places)"
			},
			"response": []
		},
		{
			"name": "Credit Transaction",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwt_token}}",
						"description": "JWT token for authentication"
					},
					{
						"key": "Idempotency-Key",
						"value": "{{$guid}}",
						"description": "Unique key for idempotent requests"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"amount\": 500.0000,\n    \"description\": \"Add bonus\"\n}"
				},
				"url": {
					"raw": "http://localhost:3000/transact/{{wallet_id}}",
					"protocol": "http",
					"host": ["localhost"],
					"port": "3000",
					"path": ["transact", "{{wallet_id}}"]
				},
				"description": "Add money to wallet (positive amount, up to 4 decimal places, max 999,999,999.9999)"
			},
			"response": []
		},
		{
			"name": "Debit Transaction",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{jwt_token}}",
						"description": "JWT token for authentication"
					},
					{
						"key": "Idempotency-Key",
						"value": "{{$guid}}",
						"description": "Unique key for idempotent requests"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"amount\": -200.0000,\n    \"description\": \"Purchase\"\n}"
				},
				"url": {
					"raw": "http://localhost:3000/transact/{{wallet_id}}",
					"protocol": "http",
					"host": ["localhost"],
					"port": "3000",
					"path": ["transact", "{{wallet_id}}"]
				},
				"description": "Deduct money from wallet (negative amount, up to 4 decimal places, prevents negative balance)"
			},
			"response": []
		},
		{
			"name": "Get Wallet",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt_token}}",
						"description": "JWT token for authentication"
					}
				],
				"url": {
					"raw": "http://localhost:3000/wallet/{{wallet_id}}",
					"protocol": "http",
					"host": ["localhost"],
					"port": "3000",
					"path": ["wallet", "{{wallet_id}}"]
				},
				"description": "Get wallet details by ID (cached for 30 seconds)"
			},
			"response": []
		},
		{
			"name": "Get Transactions",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt_token}}",
						"description": "JWT token for authentication"
					}
				],
				"url": {
					"raw": "http://localhost:3000/transactions?walletId={{wallet_id}}&skip=0&limit=10&sortBy=date&sortOrder=desc",
					"protocol": "http",
					"host": ["localhost"],
					"port": "3000",
					"path": ["transactions"],
					"query": [
						{
							"key": "walletId",
							"value": "{{wallet_id}}"
						},
						{
							"key": "skip",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "10"
						},
						{
							"key": "sortBy",
							"value": "date",
							"description": "Sort by 'date' or 'amount'"
						},
						{
							"key": "sortOrder",
							"value": "desc",
							"description": "'asc' or 'desc'"
						}
					]
				},
				"description": "Get wallet transactions with pagination and sorting (cached for 30 seconds)"
			},
			"response": []
		},
		{
			"name": "Download Transactions PDF",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt_token}}",
						"description": "JWT token for authentication"
					}
				],
				"url": {
					"raw": "http://localhost:3000/transactions/{{wallet_id}}/pdf",
					"protocol": "http",
					"host": ["localhost"],
					"port": "3000",
					"path": ["transactions", "{{wallet_id}}", "pdf"]
				},
				"description": "Download wallet transactions as PDF statement"
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "wallet_id",
			"value": "28c811b0-d834-41c3-80d9-45c524f9172e",
			"type": "string",
			"description": "ID of the wallet to operate on"
		},
		{
			"key": "jwt_token",
			"value": "your-jwt-token-here",
			"type": "string",
			"description": "JWT token for authentication"
		}
	]
}